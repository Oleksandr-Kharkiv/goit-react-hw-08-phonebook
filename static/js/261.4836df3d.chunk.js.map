{"version":3,"file":"static/js/261.4836df3d.chunk.js","mappings":"6NAEaA,EAAwBC,EAAAA,EAAAA,KAAH,8QAYrBC,EAAYD,EAAAA,EAAAA,MAAH,iKAQTE,EAAYF,EAAAA,EAAAA,MAAH,0XAeTG,EAAsBH,EAAAA,EAAAA,OAAH,ga,oBCsBhC,EAlDqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,UAACN,EAAD,CAAuBO,SAfJ,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAEfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAGgDC,aAAa,MAA5D,WACE,SAACjB,EAAD,CAAWkB,QAAS,IAApB,mBACA,SAACjB,EAAD,CACEkB,GAAI,IACJC,KAAK,OACLC,KAAK,OACLC,QAAQ,+BACRC,MAAM,yIACNC,UAAQ,KAGV,SAACxB,EAAD,CAAWkB,QAAS,IAApB,oBACA,SAACjB,EAAD,CACEkB,GAAI,IACJC,KAAK,QACLC,KAAK,QACLG,UAAQ,KAGV,SAACxB,EAAD,CAAWkB,QAAS,IAApB,uBACA,SAACjB,EAAD,CACEkB,GAAI,IACJC,KAAK,WACLC,KAAK,WACLG,UAAQ,KAGV,SAACtB,EAAD,CAAqBkB,KAAK,SAA1B,4BAGL,EC/CD,EARqB,WACnB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","components/Pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegisterFormComponent = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    padding: 30px;\n    max-width: 400px;\n    height: auto;\n    border-radius: 5px;\n    background-color: var(--background-color-component);\n    box-shadow: var(--box-shadow);\n`\n\nexport const FormLabel = styled.label`\n    font-size: 20px;\n    font-weight: 700;\n    line-height: calc(26/20);\n    letter-spacing: .05em;\n    color: var(--accent-color);\n`\n\nexport const FormInput = styled.input`\n    margin: 0;\n    padding: 7px 5px 5px;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 600;\n    line-height: calc(26/20);\n    letter-spacing: .05em;\n    border-radius: 5px;\n    color: var(--second-text-color);\n    background-color: var(--background-color);\n    box-shadow: var(--box-shadow-inset); \n    border-color: inherit;\n`     \n\nexport const FormRegisterUserBtn = styled.button`\n     width: 100%;\n    cursor: pointer;\n    padding: 10px;\n    border-radius: 5px;\n    border-color: inherit;\n    background-color: var(--background-color);\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.16); \n    text-transform: capitalize;\n    font-weight: 600;\n    font-size: 16px;\n    color: var(--first-text-color);\n    &:active { \n        color: var(--second-text-color);\n    }  \n`\n","import { useDispatch } from 'react-redux'; //  для відправки та отримання даних з лобального state\nimport {\n  RegisterFormComponent,\n  FormLabel,\n  FormInput,\n  FormRegisterUserBtn,\n} from './RegisterForm.styled';\nimport { register } from '../../redux/operations';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    dispatch(\n      register({\n        user: form.elements.user.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <RegisterFormComponent onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormLabel htmlFor={111}>Name</FormLabel>\n      <FormInput\n        id={111}\n        type=\"text\"\n        name=\"user\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <FormLabel htmlFor={222}>Email</FormLabel>\n      <FormInput\n        id={222}\n        type=\"email\"\n        name=\"email\"\n        required\n      />\n\n      <FormLabel htmlFor={333}>Password</FormLabel>\n      <FormInput\n        id={333}\n        type=\"password\"\n        name=\"password\"\n        required\n      />\n\n      <FormRegisterUserBtn type=\"submit\">Registration</FormRegisterUserBtn>\n    </RegisterFormComponent>\n  );\n};\n\nexport default RegisterForm;\n\n// ----------------------------------------Функціональні копоненти-------------\n\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { nanoid } from 'nanoid';\n// import {\n//   ContactFormComponent,\n//   FormLabel,\n//   FormInput,\n//   FormAddContactBtn,\n// } from './ContactForm.styled';\n\n// export const ContactForm = ({ onSubmitForm }) => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   let nameInputId = nanoid();\n//   let numberInputId = nanoid();\n\n//   const handleInputChange = e => {\n//     const { name, value } = e.target;\n//     if (name === 'name') setName(value);\n//     if (name === 'number') setNumber(value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     onSubmitForm({ name, number });\n//     reset();\n//   };\n\n//   const reset = () => {\n//     setName('');\n//     setNumber('');\n//   };\n\n//   return (\n//     <>\n//       <ContactFormComponent onSubmit={handleSubmit} autoComplete=\"off\">\n//         <FormLabel htmlFor={nameInputId}>Name</FormLabel>\n//         <FormInput\n//           id={nameInputId}\n//           type=\"text\"\n//           name=\"name\"\n//           value={name}\n//           onChange={handleInputChange}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n\n//         <FormLabel htmlFor={numberInputId}>Number</FormLabel>\n//         <FormInput\n//           id={numberInputId}\n//           type=\"tel\"\n//           name=\"number\"\n//           value={number}\n//           onChange={handleInputChange}\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n\n//         <FormAddContactBtn type=\"submit\">Add to contact</FormAddContactBtn>\n//       </ContactFormComponent>\n//     </>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   onSubmitForm: PropTypes.func.isRequired,\n// };\n\n// -------------------------------------------Класові компоненти--------------------\n\n// import React, { Component } from 'react';\n// import { nanoid } from 'nanoid';\n// import {ContactFormComponent, FormLabel, FormInput, FormAddContactBtn} from './ContactForm.styled';\n\n// export class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   nameInputId = nanoid();\n//   numberInputId = nanoid();\n\n//   handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <ContactFormComponent onSubmit={this.handleSubmit} autoComplete=\"off\">\n//           <FormLabel htmlFor={this.nameInputId}>Name</FormLabel>\n//           <FormInput\n//             id={this.nameInputId}\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n\n//           <FormLabel htmlFor={this.numberInputId}>Number</FormLabel>\n//           <FormInput\n//             id={this.numberInputId}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleInputChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n\n//           <FormAddContactBtn type=\"submit\">\n//             Add to contact\n//           </FormAddContactBtn>\n//         </ContactFormComponent>\n//       </>\n//     );\n//   }\n// }\n\n// ========================== варіант css-модулі ==================\n\n// import React, { Component } from 'react';\n// import { nanoid } from 'nanoid';\n// import css from './ContactForm.module.css';\n\n// export class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   nameInputId = nanoid();\n//   numberInputId = nanoid();\n\n//   handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n//           <label htmlFor={this.nameInputId}>Name</label>\n//           <input\n//             id={this.nameInputId}\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n\n//           <label htmlFor={this.numberInputId}>Number</label>\n//           <input\n//             id={this.numberInputId}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleInputChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n\n//           <button type=\"submit\" className={css.btn}>\n//             Add to contact\n//           </button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import RegisterForm from '../RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterFormComponent","styled","FormLabel","FormInput","FormRegisterUserBtn","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","register","user","elements","value","email","password","reset","autoComplete","htmlFor","id","type","name","pattern","title","required"],"sourceRoot":""}